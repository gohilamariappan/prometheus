version: '3.7'
services:
    prometheus:
        image: 'prom/prometheus:v2.1.0'
        ports:
            - '9091:9090'
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        volumes:
            - './prometheus.yml:/etc/prometheus/prometheus.yml:ro'
            - './alert.rules:/etc/prometheus/alert.rules'
        depends_on:
            - cadvisor
        networks:
            - frontend
    cadvisor:
        image: google/cadvisor
        ports:
            - '8081:8080'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - '/:/rootfs:ro'
            - '/var/run:/var/run:rw'
            - '/sys:/sys:ro'
            - '/var/lib/docker/:/var/lib/docker:ro'
#            - '/cgroup:/sys/fs/cgroup:ro'
#            - '/dev/disk/:/dev/disk:ro'
        deploy:
          mode: global
        networks:
            - frontend
    alertmanager:
        image: prom/alertmanager:v0.17.0
        ports:
            - '9093:9093'
        volumes:
            - './alertmanager/:/etc/alertmanager/'
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        networks:
            - frontend
    node-exporter:
        image: prom/node-exporter
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/:/rootfs:ro'
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points'
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
        ports:
            - '9100:9100'
        deploy:
          mode: global
        networks:
            - frontend
        restart: always
    grafana:
        image: grafana/grafana
        depends_on:
            - prometheus
        ports:
            - '3000:3000'
        volumes:
            - 'grafana_data1:/var/lib/grafana'
            - './grafana/provisioning/:/etc/grafana/provisioning/'
        env_file:
            - ./grafana/config.monitoring
        networks:
            - frontend
        restart: always
volumes:
    grafana_data1: {}
    prometheus_data: {}

networks:
  frontend:
    driver: overlay
    external: true


    #    environment:
    #        - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
